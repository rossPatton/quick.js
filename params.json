{"name":"Quick.js","tagline":"Lightweight, Modular, Isomorphic, DOM Traversal Library","body":"[![Code Climate](https://codeclimate.com/github/rossPatton/quick.js/badges/gpa.svg)](https://codeclimate.com/github/rossPatton/quick.js) [![Test Coverage](https://codeclimate.com/github/rossPatton/quick.js/badges/coverage.svg)](https://codeclimate.com/github/rossPatton/quick.js/coverage)\r\n\r\n# quick.js\r\nLightweight, Modular, Isomorphic, DOM Traversal Library\r\n\r\ninspired by [sprintjs](https://github.com/bendc/sprint), very rough, use at own risk, etc etc. \r\n\r\ngoal is to match the functionality (more or less) of [jQuery dom manipulation methods](https://api.jquery.com/category/manipulation/), using the latest native methods. Not a library to use if you have to support legacy browsers.\r\n\r\nIdeally will work on the server side (like cheerio) as well as the front-end, and will be require-able on a method by method basis like lodash (eventually). Selections are cached by default, and the cache is bustable (props to [Eric Mann](http://ttmm.io/tech/selector-caching-jquery/)).\r\n\r\nAnything that results in a change to the DOM goes through requestAnimationFrame.\r\n\r\nWill have convenience methods for working with data attributes (using css classes as selectors is bad for you).\r\n\r\nIf you want to contribute, I could use a little help with the isomorphic bits and eventually a little help with testing would be nice.\r\n\r\nWhen coverage hits around 80-90% consider this library 'useable', but changes may still occur.","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}